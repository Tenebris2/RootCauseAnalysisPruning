
test:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
_init():
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 7a 2f 00 00    	push   0x2f7a(%rip)        # 3fa0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 7b 2f 00 00 	bnd jmp *0x2f7b(%rip)        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop

Disassembly of section .plt.got:

0000000000001080 <__cxa_finalize@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 6d 2f 00 00 	bnd jmp *0x2f6d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001090 <putchar@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 15 2f 00 00 	bnd jmp *0x2f15(%rip)        # 3fb0 <putchar@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010a0 <puts@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 0d 2f 00 00 	bnd jmp *0x2f0d(%rip)        # 3fb8 <puts@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <__stack_chk_fail@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 05 2f 00 00 	bnd jmp *0x2f05(%rip)        # 3fc0 <__stack_chk_fail@GLIBC_2.4>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010c0 <printf@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 fd 2e 00 00 	bnd jmp *0x2efd(%rip)        # 3fc8 <printf@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <__isoc99_scanf@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 f5 2e 00 00 	bnd jmp *0x2ef5(%rip)        # 3fd0 <__isoc99_scanf@GLIBC_2.7>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010e0 <_start>:
_start():
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	31 ed                	xor    %ebp,%ebp
    10e6:	49 89 d1             	mov    %rdx,%r9
    10e9:	5e                   	pop    %rsi
    10ea:	48 89 e2             	mov    %rsp,%rdx
    10ed:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10f1:	50                   	push   %rax
    10f2:	54                   	push   %rsp
    10f3:	45 31 c0             	xor    %r8d,%r8d
    10f6:	31 c9                	xor    %ecx,%ecx
    10f8:	48 8d 3d ca 00 00 00 	lea    0xca(%rip),%rdi        # 11c9 <main>
    10ff:	ff 15 d3 2e 00 00    	call   *0x2ed3(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1105:	f4                   	hlt    
    1106:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    110d:	00 00 00 

0000000000001110 <deregister_tm_clones>:
deregister_tm_clones():
    1110:	48 8d 3d f9 2e 00 00 	lea    0x2ef9(%rip),%rdi        # 4010 <__TMC_END__>
    1117:	48 8d 05 f2 2e 00 00 	lea    0x2ef2(%rip),%rax        # 4010 <__TMC_END__>
    111e:	48 39 f8             	cmp    %rdi,%rax
    1121:	74 15                	je     1138 <deregister_tm_clones+0x28>
    1123:	48 8b 05 b6 2e 00 00 	mov    0x2eb6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    112a:	48 85 c0             	test   %rax,%rax
    112d:	74 09                	je     1138 <deregister_tm_clones+0x28>
    112f:	ff e0                	jmp    *%rax
    1131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1138:	c3                   	ret    
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <register_tm_clones>:
register_tm_clones():
    1140:	48 8d 3d c9 2e 00 00 	lea    0x2ec9(%rip),%rdi        # 4010 <__TMC_END__>
    1147:	48 8d 35 c2 2e 00 00 	lea    0x2ec2(%rip),%rsi        # 4010 <__TMC_END__>
    114e:	48 29 fe             	sub    %rdi,%rsi
    1151:	48 89 f0             	mov    %rsi,%rax
    1154:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1158:	48 c1 f8 03          	sar    $0x3,%rax
    115c:	48 01 c6             	add    %rax,%rsi
    115f:	48 d1 fe             	sar    %rsi
    1162:	74 14                	je     1178 <register_tm_clones+0x38>
    1164:	48 8b 05 85 2e 00 00 	mov    0x2e85(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    116b:	48 85 c0             	test   %rax,%rax
    116e:	74 08                	je     1178 <register_tm_clones+0x38>
    1170:	ff e0                	jmp    *%rax
    1172:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1178:	c3                   	ret    
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <__do_global_dtors_aux>:
__do_global_dtors_aux():
    1180:	f3 0f 1e fa          	endbr64 
    1184:	80 3d 85 2e 00 00 00 	cmpb   $0x0,0x2e85(%rip)        # 4010 <__TMC_END__>
    118b:	75 2b                	jne    11b8 <__do_global_dtors_aux+0x38>
    118d:	55                   	push   %rbp
    118e:	48 83 3d 62 2e 00 00 	cmpq   $0x0,0x2e62(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1195:	00 
    1196:	48 89 e5             	mov    %rsp,%rbp
    1199:	74 0c                	je     11a7 <__do_global_dtors_aux+0x27>
    119b:	48 8b 3d 66 2e 00 00 	mov    0x2e66(%rip),%rdi        # 4008 <__dso_handle>
    11a2:	e8 d9 fe ff ff       	call   1080 <__cxa_finalize@plt>
    11a7:	e8 64 ff ff ff       	call   1110 <deregister_tm_clones>
    11ac:	c6 05 5d 2e 00 00 01 	movb   $0x1,0x2e5d(%rip)        # 4010 <__TMC_END__>
    11b3:	5d                   	pop    %rbp
    11b4:	c3                   	ret    
    11b5:	0f 1f 00             	nopl   (%rax)
    11b8:	c3                   	ret    
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <frame_dummy>:
frame_dummy():
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	e9 77 ff ff ff       	jmp    1140 <register_tm_clones>

00000000000011c9 <main>:
main():
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:8

// Function prototypes
void printArray(int arr[], int size);
int sumArray(int arr[], int size);

int main() {
    11c9:	f3 0f 1e fa          	endbr64 
    11cd:	55                   	push   %rbp
    11ce:	48 89 e5             	mov    %rsp,%rbp
    11d1:	48 83 ec 30          	sub    $0x30,%rsp
    11d5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11dc:	00 00 
    11de:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11e2:	31 c0                	xor    %eax,%eax
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:13
    int numbers[5];
    int i;

    // Input
    printf("Enter 5 integers:\n");
    11e4:	48 8d 05 19 0e 00 00 	lea    0xe19(%rip),%rax        # 2004 <_IO_stdin_used+0x4>
    11eb:	48 89 c7             	mov    %rax,%rdi
    11ee:	e8 ad fe ff ff       	call   10a0 <puts@plt>
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:14
    for (i = 0; i < 5; i++) {
    11f3:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    11fa:	eb 47                	jmp    1243 <main+0x7a>
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:15 (discriminator 3)
        printf("Number %d: ", i + 1);
    11fc:	8b 45 d8             	mov    -0x28(%rbp),%eax
    11ff:	83 c0 01             	add    $0x1,%eax
    1202:	89 c6                	mov    %eax,%esi
    1204:	48 8d 05 0b 0e 00 00 	lea    0xe0b(%rip),%rax        # 2016 <_IO_stdin_used+0x16>
    120b:	48 89 c7             	mov    %rax,%rdi
    120e:	b8 00 00 00 00       	mov    $0x0,%eax
    1213:	e8 a8 fe ff ff       	call   10c0 <printf@plt>
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:16 (discriminator 3)
        scanf("%d", &numbers[i]);
    1218:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    121c:	8b 45 d8             	mov    -0x28(%rbp),%eax
    121f:	48 98                	cltq   
    1221:	48 c1 e0 02          	shl    $0x2,%rax
    1225:	48 01 d0             	add    %rdx,%rax
    1228:	48 89 c6             	mov    %rax,%rsi
    122b:	48 8d 05 f0 0d 00 00 	lea    0xdf0(%rip),%rax        # 2022 <_IO_stdin_used+0x22>
    1232:	48 89 c7             	mov    %rax,%rdi
    1235:	b8 00 00 00 00       	mov    $0x0,%eax
    123a:	e8 91 fe ff ff       	call   10d0 <__isoc99_scanf@plt>
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:14 (discriminator 3)
    for (i = 0; i < 5; i++) {
    123f:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:14 (discriminator 1)
    1243:	83 7d d8 04          	cmpl   $0x4,-0x28(%rbp)
    1247:	7e b3                	jle    11fc <main+0x33>
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:20
    }

    // Process
    int sum = sumArray(numbers, 5);
    1249:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    124d:	be 05 00 00 00       	mov    $0x5,%esi
    1252:	48 89 c7             	mov    %rax,%rdi
    1255:	e8 bd 00 00 00       	call   1317 <sumArray>
    125a:	89 45 dc             	mov    %eax,-0x24(%rbp)
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:23

    // Output
    printf("You entered: ");
    125d:	48 8d 05 c1 0d 00 00 	lea    0xdc1(%rip),%rax        # 2025 <_IO_stdin_used+0x25>
    1264:	48 89 c7             	mov    %rax,%rdi
    1267:	b8 00 00 00 00       	mov    $0x0,%eax
    126c:	e8 4f fe ff ff       	call   10c0 <printf@plt>
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:24
    printArray(numbers, 5);
    1271:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    1275:	be 05 00 00 00       	mov    $0x5,%esi
    127a:	48 89 c7             	mov    %rax,%rdi
    127d:	e8 34 00 00 00       	call   12b6 <printArray>
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:25
    printf("Sum of the numbers: %d\n", sum);
    1282:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1285:	89 c6                	mov    %eax,%esi
    1287:	48 8d 05 a5 0d 00 00 	lea    0xda5(%rip),%rax        # 2033 <_IO_stdin_used+0x33>
    128e:	48 89 c7             	mov    %rax,%rdi
    1291:	b8 00 00 00 00       	mov    $0x0,%eax
    1296:	e8 25 fe ff ff       	call   10c0 <printf@plt>
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:27

    return 0;
    129b:	b8 00 00 00 00       	mov    $0x0,%eax
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:28
}
    12a0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    12a4:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    12ab:	00 00 
    12ad:	74 05                	je     12b4 <main+0xeb>
    12af:	e8 fc fd ff ff       	call   10b0 <__stack_chk_fail@plt>
    12b4:	c9                   	leave  
    12b5:	c3                   	ret    

00000000000012b6 <printArray>:
printArray():
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:31

// Function to print an array
void printArray(int arr[], int size) {
    12b6:	f3 0f 1e fa          	endbr64 
    12ba:	55                   	push   %rbp
    12bb:	48 89 e5             	mov    %rsp,%rbp
    12be:	48 83 ec 20          	sub    $0x20,%rsp
    12c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    12c6:	89 75 e4             	mov    %esi,-0x1c(%rbp)
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:32
    for (int i = 0; i < size; i++) {
    12c9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    12d0:	eb 30                	jmp    1302 <printArray+0x4c>
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:33 (discriminator 3)
        printf("%d ", arr[i]);
    12d2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    12d5:	48 98                	cltq   
    12d7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    12de:	00 
    12df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12e3:	48 01 d0             	add    %rdx,%rax
    12e6:	8b 00                	mov    (%rax),%eax
    12e8:	89 c6                	mov    %eax,%esi
    12ea:	48 8d 05 5a 0d 00 00 	lea    0xd5a(%rip),%rax        # 204b <_IO_stdin_used+0x4b>
    12f1:	48 89 c7             	mov    %rax,%rdi
    12f4:	b8 00 00 00 00       	mov    $0x0,%eax
    12f9:	e8 c2 fd ff ff       	call   10c0 <printf@plt>
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:32 (discriminator 3)
    for (int i = 0; i < size; i++) {
    12fe:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:32 (discriminator 1)
    1302:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1305:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    1308:	7c c8                	jl     12d2 <printArray+0x1c>
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:35
    }
    printf("\n");
    130a:	bf 0a 00 00 00       	mov    $0xa,%edi
    130f:	e8 7c fd ff ff       	call   1090 <putchar@plt>
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:36
}
    1314:	90                   	nop
    1315:	c9                   	leave  
    1316:	c3                   	ret    

0000000000001317 <sumArray>:
sumArray():
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:39

// Function to compute the sum of an array
int sumArray(int arr[], int size) {
    1317:	f3 0f 1e fa          	endbr64 
    131b:	55                   	push   %rbp
    131c:	48 89 e5             	mov    %rsp,%rbp
    131f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1323:	89 75 e4             	mov    %esi,-0x1c(%rbp)
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:40
    int sum = 0;
    1326:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:41
    for (int i = 0; i < size; i++) {
    132d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1334:	eb 1d                	jmp    1353 <sumArray+0x3c>
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:42 (discriminator 3)
        sum += arr[i];
    1336:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1339:	48 98                	cltq   
    133b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1342:	00 
    1343:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1347:	48 01 d0             	add    %rdx,%rax
    134a:	8b 00                	mov    (%rax),%eax
    134c:	01 45 f8             	add    %eax,-0x8(%rbp)
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:41 (discriminator 3)
    for (int i = 0; i < size; i++) {
    134f:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:41 (discriminator 1)
    1353:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1356:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    1359:	7c db                	jl     1336 <sumArray+0x1f>
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:44
    }
    return sum;
    135b:	8b 45 f8             	mov    -0x8(%rbp),%eax
/home/tenebris/Documents/Root Cause Analysis/analyze/test.c:45
}
    135e:	5d                   	pop    %rbp
    135f:	c3                   	ret    

Disassembly of section .fini:

0000000000001360 <_fini>:
_fini():
    1360:	f3 0f 1e fa          	endbr64 
    1364:	48 83 ec 08          	sub    $0x8,%rsp
    1368:	48 83 c4 08          	add    $0x8,%rsp
    136c:	c3                   	ret    
